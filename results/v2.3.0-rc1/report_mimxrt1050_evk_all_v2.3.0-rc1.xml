<?xml version="1.0"?>
<testsuites>
    <testsuite tests="18" errors="0" failures="0" name="" skipped="2" time="0">
         <testcase classname="mimxrt1050_evk:arch.interrupt" name="arch.interrupt" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:arch.interrupt.no_optimizations" name="arch.interrupt.no_optimizations" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimxrt1050_evk:sample.basic.button" name="sample.basic.button" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.bluetooth.peripheral" name="sample.bluetooth.peripheral" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.bluetooth.peripheral_hr" name="sample.bluetooth.peripheral_hr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.bluetooth.peripheral_hr.frdm_kw41z_shield" name="sample.bluetooth.peripheral_hr.frdm_kw41z_shield" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.bluetooth.peripheral_ht" name="sample.bluetooth.peripheral_ht" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.bluetooth.peripheral_ht.frdm_kw41z_shield" name="sample.bluetooth.peripheral_ht.frdm_kw41z_shield" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.timing.userspace" name="benchmark.kernel.timing.userspace" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timing" name="kernel.timing" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.application" name="benchmark.kernel.application" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.latency" name="benchmark.kernel.latency" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.scheduler" name="benchmark.kernel.scheduler" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.sched" name="kernel.sched" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.core" name="benchmark.kernel.core" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:benchmark.kernel.timing.default" name="benchmark.kernel.timing.default" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt.arm.irq_vector_table" name="arch.interrupt.arm.irq_vector_table" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.arm.swap.common" name="arch.arm.swap.common" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.arm.swap.common.no_optimizations" name="arch.arm.swap.common.no_optimizations" time="0">
          </testcase>
  </testsuite>
<testsuite tests="35" errors="0" failures="2" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:net.dns" name="net.dns" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.dns_resolve.mdns" name="sample.net.dns_resolve.mdns" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.common.xip" name="arch.common.xip" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.net_mgmt.usermode" name="sample.net.sockets.net_mgmt.usermode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.userspace.prod_consumer" name="sample.userspace.prod_consumer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection" name="kernel.memory_protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.memory_protection.shared_mem" name="sample.kernel.memory_protection.shared_mem" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.mpu.mpu_test" name="sample.mpu.mpu_test" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.stack_random" name="kernel.memory_protection.stack_random" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.logger" name="sample.logger" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.logger.usermode" name="sample.logger.usermode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.logger.rtt" name="sample.logger.rtt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:logging.log_output" name="logging.log_output" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:logging.log_msg" name="logging.log_msg" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:logging.log_list" name="logging.log_list" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:logging.log_core" name="logging.log_core" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.dns_resolve.llmnr" name="sample.net.dns_resolve.llmnr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.libc" name="libraries.libc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.libc.sprintf" name="libraries.libc.sprintf" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.encoding.jwt" name="libraries.encoding.jwt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.encoding.json" name="libraries.encoding.json" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.basic.helloworld" name="sample.basic.helloworld" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher" name="sample.kernel.philosopher" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.same_prio" name="sample.kernel.philosopher.same_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.static" name="sample.kernel.philosopher.static" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.semaphores" name="sample.kernel.philosopher.semaphores" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.stacks" name="sample.kernel.philosopher.stacks" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.fifos" name="sample.kernel.philosopher.fifos" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.lifos" name="sample.kernel.philosopher.lifos" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.preempt_only" name="sample.kernel.philosopher.preempt_only" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.philosopher.coop_only" name="sample.kernel.philosopher.coop_only" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt" name="arch.interrupt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt.gen_isr_table" name="arch.interrupt.gen_isr_table" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.http" name="net.http" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:buildsystem.include_file" name="buildsystem.include_file" time="0">
          </testcase>
  </testsuite><testsuite tests="28" errors="0" failures="0" name="" skipped="3" time="0">
         <testcase classname="mimxrt1050_evk:libraries.libc" name="libraries.libc" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:libraries.libc.newlib" name="libraries.libc.newlib" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimxrt1050_evk:sample.filesystem.fat_fs" name="sample.filesystem.fat_fs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.os.fdtable" name="libraries.os.fdtable" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.app_dev.external_lib" name="sample.app_dev.external_lib" time="0">
          </testcase>
         <testcase classname="mimxrt1050_evk:buildsystem.debug.build" name="buildsystem.debug.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimxrt1050_evk:crypto.rand32" name="crypto.rand32" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:crypto.mbedtls" name="crypto.mbedtls" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.drivers.crypto.mbedtls" name="sample.drivers.crypto.mbedtls" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.drivers.crypto.mbedtls.micro" name="sample.drivers.crypto.mbedtls.micro" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.cpp.synchronization" name="sample.cpp.synchronization" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:application_development.cpp.main" name="application_development.cpp.main" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:application_development.cpp.libcxx" name="application_development.cpp.libcxx" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:application_development.cpp.libcxx.exceptions" name="application_development.cpp.libcxx.exceptions" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.console.echo" name="sample.console.echo" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.console.getchar" name="sample.console.getchar" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.console.getline" name="sample.console.getline" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.cmsis_rtos_v1" name="portability.cmsis_rtos_v1" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v1.philosopher" name="sample.portability.cmsis_rtos_v1.philosopher" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v1.philosopher.same_prio" name="sample.portability.cmsis_rtos_v1.philosopher.same_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v1.philosopher.semaphores" name="sample.portability.cmsis_rtos_v1.philosopher.semaphores" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.cmsis_rtos_v1.timer" name="portability.cmsis_rtos_v1.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v1.timer_synchronization" name="sample.portability.cmsis_rtos_v1.timer_synchronization" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.cmsis_rtos_v2" name="portability.cmsis_rtos_v2" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v2.philosopher" name="sample.portability.cmsis_rtos_v2.philosopher" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v2.philosopher.same_prio" name="sample.portability.cmsis_rtos_v2.philosopher.same_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v2.philosopher.semaphores" name="sample.portability.cmsis_rtos_v2.philosopher.semaphores" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.cmsis_rtos_v2.timer" name="portability.cmsis_rtos_v2.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.portability.cmsis_rtos_v2.timer_synchronization" name="sample.portability.cmsis_rtos_v2.timer_synchronization" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.libc.minimal.mem_alloc" name="libraries.libc.minimal.mem_alloc" time="0">
          </testcase>
  </testsuite><testsuite tests="53" errors="0" failures="1" name="" skipped="12" time="0">
          <testcase classname="mimxrt1050_evk:sample.nfc.hello" name="sample.nfc.hello" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
         <testcase classname="mimxrt1050_evk:drivers.clock.build" name="drivers.clock.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:drivers.gpio.build" name="drivers.gpio.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:drivers.eeprom.build" name="drivers.eeprom.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:kernel.timer" name="kernel.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.monotonic" name="kernel.timer.monotonic" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.monotonic.timer" name="kernel.timer.monotonic.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.starve.starve" name="kernel.timer.starve.starve" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.time_conversions" name="kernel.timer.tickless.time_conversions" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timeout_abs" name="kernel.timer.tickless.timeout_abs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_remaining" name="kernel.timer.tickless.timer_remaining" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timConsole now belongs to simulator." name="kernel.timer.timConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.time_conversions" name="kernel.timer.time_conversions" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timeout_abs" name="kernel.timer.timeout_abs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer" name="kernel.timer.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_duration_period" name="kernel.timer.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_expirefn_null" name="kernel.timer.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_k_define" name="kernel.timer.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_period_0" name="kernel.timer.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_periodicity" name="kernel.timer.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_remaining" name="kernel.timer.timer_remaining" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_remaining_get" name="kernel.timer.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_status_get" name="kernel.timer.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_status_get_anytime" name="kernel.timer.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_status_sync" name="kernel.timer.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer.timer_user_data" name="kernel.timer.timer_user_data" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0" name="testing.ztest.verbose_0" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1" name="testing.ztest.verbose_1" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2" name="testing.ztest.verbose_2" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:testing.ztest.regular_output" name="testing.ztest.regular_output" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:testing.ztest.customized_output" name="testing.ztest.customized_output" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.shell.shell_module" name="sample.shell.shell_module" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.shell.shell_module.minimal" name="sample.shell.shell_module.minimal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.shell.shell_module.minimal_rtt" name="sample.shell.shell_module.minimal_rtt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:shell" name="shell" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:shell.shell_module" name="shell.shell_module" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.drivers.current_sensing" name="sample.drivers.current_sensing" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.sensor.thermometer" name="sample.sensor.thermometer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.gui.lvgl" name="sample.gui.lvgl" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:libraries.data_structures" name="libraries.data_structures" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.posix.fs" name="portability.posix.fs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:portability.posix.common" name="portability.posix.common" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt" name="arch.interrupt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:arch.interrupt.arm.nmi" name="arch.interrupt.arm.nmi" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:drivers.ipc.mailbox" name="drivers.ipc.mailbox" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:drivers.console.uart" name="drivers.console.uart" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.display.grove_display" name="sample.display.grove_display" time="0">
          </testcase>
         <testcase classname="mimxrt1050_evk:drivers.build.build" name="drivers.build.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:net.ethernet.build" name="net.ethernet.build" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.trigger_a_h" name="sensors.build.trigger_a_h" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.trigger_i_z" name="sensors.build.trigger_i_z" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.a_h" name="sensors.build.a_h" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.i_z" name="sensors.build.i_z" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.stmemsc" name="sensors.build.stmemsc" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
         <testcase classname="mimxrt1050_evk:sensors.build.stmemsc_trigger" name="sensors.build.stmemsc_trigger" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
  </testsuite><testsuite tests="21" errors="0" failures="0" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:net.ipv6" name="net.ipv6" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.ipv6.fragment" name="net.ipv6.fragment" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.ip-addr" name="net.ip-addr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.iface.with_userspace" name="net.iface.with_userspace" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed" name="net.iface.no_userspace_allowed" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.icmpv6" name="net.icmpv6" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.websocket_client" name="sample.net.sockets.websocket_client" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.http_client" name="sample.net.sockets.http_client" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.dhcp" name="net.dhcp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.dhcpv4_client" name="sample.net.dhcpv4_client" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.hostname" name="net.hostname" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.hostname.unique" name="net.hostname.unique" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.ethernet_mgmt" name="net.ethernet_mgmt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.offload" name="net.offload" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.buf" name="net.buf" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.arp" name="net.arp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.6lo" name="net.6lo" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.coap" name="net.coap" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.coap.simple" name="net.coap.simple" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.packet" name="net.packet" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.udp" name="net.udp" time="0">
          </testcase>
  </testsuite><testsuite tests="39" errors="0" failures="5" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:sample.nfc.hello" name="sample.nfc.hello" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.echo" name="sample.net.sockets.echo" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.echo_server" name="sample.net.sockets.echo_server" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.echo_server.usbnet" name="sample.net.sockets.echo_server.usbnet" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.echo_server.usbnet_composite" name="sample.net.sockets.echo_server.usbnet_composite" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:net.vlan" name="net.vlan" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.vlan" name="sample.net.vlan" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.util" name="net.util" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.timestamp" name="net.timestamp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.trickle" name="net.trickle" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.tls_credentials" name="net.tls_credentials" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.telnet" name="sample.net.telnet" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.tcp" name="net.tcp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.tcp.simple" name="net.tcp.simple" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.syslog.with_timefuncs" name="sample.net.syslog.with_timefuncs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.syslog.without_timefuncs" name="sample.net.syslog.without_timefuncs" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.stats" name="sample.net.stats" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.get_name_info" name="net.socket.get_name_info" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.misc" name="net.socket.misc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.select" name="net.socket.select" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.tcp" name="net.socket.tcp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.udp" name="net.socket.udp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.register" name="net.socket.register" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.register.tls" name="net.socket.register.tls" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.mgmt" name="net.socket.mgmt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.net_mgmt.kernelmode" name="sample.net.sockets.net_mgmt.kernelmode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.dumb_http_server" name="sample.net.sockets.dumb_http_server" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.sockets.dumb_http_server_mt" name="sample.net.sockets.dumb_http_server_mt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.socket.get_addr_info" name="net.socket.get_addr_info" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.route" name="net.route" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.ptp.clock" name="net.ptp.clock" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.promisc" name="net.promisc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.promiscuous_mode" name="sample.net.promiscuous_mode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.shell" name="net.shell" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:shell" name="shell" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.context" name="net.context" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.neighbour" name="net.neighbour" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.mld" name="net.mld" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:net.management" name="net.management" time="0">
          </testcase>
  </testsuite><testsuite tests="63" errors="0" failures="2" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:kernel.common" name="kernel.common" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.kernel.synchronization" name="sample.kernel.synchronization" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection" name="kernel.memory_protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.syscalls" name="kernel.memory_protection.syscalls" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.obj_validation" name="kernel.memory_protection.obj_validation" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.protection" name="kernel.memory_protection.protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool" name="kernel.memory_pool" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api" name="kernel.memory_pool.api" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.mpool_alloc_free_isr" name="kernel.memory_pool.api.legacy.mpool_alloc_free_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.mpool_alloc_free_thread" name="kernel.memory_pool.api.legacy.mpool_alloc_free_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.mpool_alloc_size" name="kernel.memory_pool.api.legacy.mpool_alloc_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.mpool_alloc_timeout" name="kernel.memory_pool.api.legacy.mpool_alloc_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.mpool_kdefine_extern" name="kernel.memory_pool.api.legacy.mpool_kdefine_extern" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.legacy.sys_heap_mem_pool_assign" name="kernel.memory_pool.api.legacy.sys_heap_mem_pool_assign" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.mpool_alloc_free_isr" name="kernel.memory_pool.api.mpool_alloc_free_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.mpool_alloc_free_thread" name="kernel.memory_pool.api.mpool_alloc_free_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.mpool_alloc_size" name="kernel.memory_pool.api.mpool_alloc_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.mpool_alloc_timeout" name="kernel.memory_pool.api.mpool_alloc_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.mpool_kdefine_extern" name="kernel.memory_pool.api.mpool_kdefine_extern" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.api.sys_heap_mem_pool_assign" name="kernel.memory_pool.api.sys_heap_mem_pool_assign" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept" name="kernel.memory_pool.concept" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.legacy.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.concept.legacy.mpool_alloc_merge_failed_diff_parent" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.legacy.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.concept.legacy.mpool_alloc_merge_failed_diff_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.legacy.mpool_alloc_size_roundup" name="kernel.memory_pool.concept.legacy.mpool_alloc_size_roundup" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.legacy.mpool_alloc_wait_prio" name="kernel.memory_pool.concept.legacy.mpool_alloc_wait_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.mpool_alloc_size_roundup" name="kernel.memory_pool.concept.mpool_alloc_size_roundup" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.concept.mpool_alloc_wait_prio" name="kernel.memory_pool.concept.mpool_alloc_wait_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.legacy.pool_block_get" name="kernel.memory_pool.legacy.pool_block_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.legacy.pool_block_get_timeout" name="kernel.memory_pool.legacy.pool_block_get_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.legacy.pool_block_get_wait" name="kernel.memory_pool.legacy.pool_block_get_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.legacy.pool_malloc" name="kernel.memory_pool.legacy.pool_malloc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_free_isr" name="kernel.memory_pool.mpool_alloc_free_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_free_thread" name="kernel.memory_pool.mpool_alloc_free_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_size" name="kernel.memory_pool.mpool_alloc_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_size_roundup" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_timeout" name="kernel.memory_pool.mpool_alloc_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_alloc_wait_prio" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_kdefine_extern" name="kernel.memory_pool.mpool_kdefine_extern" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.mpool_threadsafe" name="kernel.memory_pool.mpool_threadsafe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.pool_block_get" name="kernel.memory_pool.pool_block_get" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.pool_block_get_timeout" name="kernel.memory_pool.pool_block_get_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.pool_block_get_wait" name="kernel.memory_pool.pool_block_get_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.pool_malloc" name="kernel.memory_pool.pool_malloc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys" name="kernel.memory_pool.sys" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys.sys_mem_pool_alloc_align4" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys.sys_mem_pool_alloc_free" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys.sys_mem_pool_min_block_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.threadsafe" name="kernel.memory_pool.threadsafe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.threadsafe.legacy.mpool_threadsafe" name="kernel.memory_pool.threadsafe.legacy.mpool_threadsafe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.threadsafe.mpool_threadsafe" name="kernel.memory_pool.threadsafe.mpool_threadsafe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection" name="kernel.common.stack_protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.stackprot" name="kernel.memory_protection.stackprot" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_no_userspace" name="kernel.common.stack_protection_no_userspace" time="0">
          </testcase>
  </testsuite><testsuite tests="216" errors="0" failures="0" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:kernel.memory_pool" name="kernel.memory_pool" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_pool.sys" name="kernel.memory_pool.sys" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe" name="kernel.pipe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common" name="kernel.common" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.misra" name="kernel.common.misra" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.futex" name="kernel.futex" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection" name="kernel.memory_protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.memory_protection.sys_sem" name="kernel.memory_protection.sys_sem" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.message_queue" name="kernel.message_queue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.mutex" name="kernel.mutex" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api" name="kernel.pipe.api" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.half_pipe_block_put_sema" name="kernel.pipe.api.half_pipe_block_put_sema" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.half_pipe_get_put" name="kernel.pipe.api.half_pipe_get_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.half_pipe_saturating_block_put" name="kernel.pipe.api.half_pipe_saturating_block_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_alloc" name="kernel.pipe.api.pipe_alloc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_no_buffer" name="kernel.pipe.api.pipe_avail_no_buffer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_r_eq_w_empty" name="kernel.pipe.api.pipe_avail_r_eq_w_empty" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_r_eq_w_fulConsole now belongs to simulator." name="kernel.pipe.api.pipe_avail_r_eq_w_fulConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_r_eq_w_full" name="kernel.pipe.api.pipe_avail_r_eq_w_full" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_r_lt_w" name="kernel.pipe.api.pipe_avail_r_lt_w" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_avail_w_lt_r" name="kernel.pipe.api.pipe_avail_w_lt_r" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_block_put" name="kernel.pipe.api.pipe_block_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_block_put_sema" name="kernel.pipe.api.pipe_block_put_sema" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_block_writer_wait" name="kernel.pipe.api.pipe_block_writer_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_get_fail" name="kernel.pipe.api.pipe_get_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_get_put" name="kernel.pipe.api.pipe_get_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_put_fail" name="kernel.pipe.api.pipe_put_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_reader_wait" name="kernel.pipe.api.pipe_reader_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_thread2thread" name="kernel.pipe.api.pipe_thread2thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_user_get_fail" name="kernel.pipe.api.pipe_user_get_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_user_put_fail" name="kernel.pipe.api.pipe_user_put_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.pipe_user_thread2thread" name="kernel.pipe.api.pipe_user_thread2thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.api.resource_pool_auto_free" name="kernel.pipe.api.resource_pool_auto_free" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.half_pipe_block_put_sema" name="kernel.pipe.half_pipe_block_put_sema" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.half_pipe_get_put" name="kernel.pipe.half_pipe_get_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_alloc" name="kernel.pipe.pipe_alloc" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_block_put" name="kernel.pipe.pipe_block_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_block_put_sema" name="kernel.pipe.pipe_block_put_sema" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_block_writer_wait" name="kernel.pipe.pipe_block_writer_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_forever_timeout" name="kernel.pipe.pipe_forever_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_forever_wait" name="kernel.pipe.pipe_forever_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_fail" name="kernel.pipe.pipe_get_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_invalid_size" name="kernel.pipe.pipe_get_invalid_size" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_min_xfer" name="kernel.pipe.pipe_get_min_xfer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_on_empty_pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_put" name="kernel.pipe.pipe_get_put" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_get_timeout" name="kernel.pipe.pipe_get_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_on_multiple_elements" name="kernel.pipe.pipe_on_multiple_elements" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_on_single_elements" name="kernel.pipe.pipe_on_single_elements" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_put_fail" name="kernel.pipe.pipe_put_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_put_min_xfer" name="kernel.pipe.pipe_put_min_xfer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_reader_wait" name="kernel.pipe.pipe_reader_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_thread2thread" name="kernel.pipe.pipe_thread2thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_timeout" name="kernel.pipe.pipe_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_user_get_fail" name="kernel.pipe.pipe_user_get_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_user_put_fail" name="kernel.pipe.pipe_user_put_fail" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.pipe_user_thread2thread" name="kernel.pipe.pipe_user_thread2thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.pipe.resource_pool_auto_free" name="kernel.pipe.resource_pool_auto_free" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.poll" name="kernel.poll" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.queue" name="kernel.queue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.queue.poll" name="kernel.queue.poll" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.semaphore" name="kernel.semaphore" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection" name="kernel.common.stack_protection" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_arm_fp_sharing" name="kernel.common.stack_protection_arm_fp_sharing" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_arm_fp_sharing.fatal" name="kernel.common.stack_protection_arm_fp_sharing.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_arm_fpu_sharing.fatal" name="kernel.common.stack_protection_arm_fpu_sharing.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_armv8m_mpu_stack_guard.fatal" name="kernel.common.stack_protection_armv8m_mpu_stack_guard.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_no_userspace" name="kernel.common.stack_protection_no_userspace" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_no_userspace.arm_interrupt" name="kernel.common.stack_protection_no_userspace.arm_interrupt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_protection_no_userspace.fatal" name="kernel.common.stack_protection_no_userspace.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.stack" name="kernel.stack" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.stack.usage" name="kernel.stack.usage" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.timer" name="kernel.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue" name="kernel.workqueue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.already_triggered" name="kernel.workqueue.already_triggered" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api" name="kernel.workqueue.api" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.api.delayed_work_cancel_from_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.api.delayed_work_cancel_from_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_cancel_isr" name="kernel.workqueue.api.delayed_work_cancel_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_cancel_thread" name="kernel.workqueue.api.delayed_work_cancel_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_submit_handler" name="kernel.workqueue.api.delayed_work_submit_handler" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_submit_isr" name="kernel.workqueue.api.delayed_work_submit_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_submit_thread" name="kernel.workqueue.api.delayed_work_submit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_submit_to_queue_isr" name="kernel.workqueue.api.delayed_work_submit_to_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.delayed_work_submit_to_queue_thread" name="kernel.workqueue.api.delayed_work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggeConsole now belongs to simulator." name="kernel.workqueue.api.triggeConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_cancel_from_queue_isr" name="kernel.workqueue.api.triggered_work_cancel_from_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_cancel_from_queue_thread" name="kernel.workqueue.api.triggered_work_cancel_from_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_cancel_isr" name="kernel.workqueue.api.triggered_work_cancel_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_cancel_thread" name="kernel.workqueue.api.triggered_work_cancel_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_submit_isr" name="kernel.workqueue.api.triggered_work_submit_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_submit_thread" name="kernel.workqueue.api.triggered_work_submit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_submit_to_queue_isr" name="kernel.workqueue.api.triggered_work_submit_to_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.triggered_work_submit_to_queue_thread" name="kernel.workqueue.api.triggered_work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.user_work_submit_to_queue_thread" name="kernel.workqueue.api.user_work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.user_workq_granted_access" name="kernel.workqueue.api.user_workq_granted_access" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.user_workq_granted_access_setup" name="kernel.workqueue.api.user_workq_granted_access_setup" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.user_workq_start_before_submit" name="kernel.workqueue.api.user_workq_start_before_submit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_resubmit_to_queue" name="kernel.workqueue.api.work_resubmit_to_queue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_handler" name="kernel.workqueue.api.work_submit_handler" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_isr" name="kernel.workqueue.api.work_submit_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_thread" name="kernel.workqueue.api.work_submit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_to_multipleq" name="kernel.workqueue.api.work_submit_to_multipleq" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_to_queue_isr" name="kernel.workqueue.api.work_submit_to_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.work_submit_to_queue_thread" name="kernel.workqueue.api.work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.api.workq_start_before_submit" name="kernel.workqueue.api.workq_start_before_submit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed" name="kernel.workqueue.delayed" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_cancel" name="kernel.workqueue.delayed_cancel" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_resubmit" name="kernel.workqueue.delayed_resubmit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_resubmit_thread" name="kernel.workqueue.delayed_resubmit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_cancel_isr" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_cancel_thread" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_submit_isr" name="kernel.workqueue.delayed_work_submit_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_submit_thread" name="kernel.workqueue.delayed_work_submit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_submit_to_queue_isr" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.delayed_work_submit_to_queue_thread" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.offload_workqueue" name="kernel.workqueue.offload_workqueue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.resubmit" name="kernel.workqueue.resubmit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.sam.offload_workqueue" name="kernel.workqueue.sam.offload_workqueue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.sequence" name="kernel.workqueue.sequence" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered" name="kernel.workqueue.triggered" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered_no_wait" name="kernel.workqueue.triggered_no_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered_no_wait_expired" name="kernel.workqueue.triggered_no_wait_expired" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered_resubmit" name="kernel.workqueue.triggered_resubmit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered_wait" name="kernel.workqueue.triggered_wait" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.triggered_wait_expired" name="kernel.workqueue.triggered_wait_expired" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.user_work_submit_to_queue_thread" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.user_workq_granted_access" name="kernel.workqueue.user_workq_granted_access" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.user_workq_granted_access_setup" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.user_workq_start_before_submit" name="kernel.workqueue.user_workq_start_before_submit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_resubmit_to_queue" name="kernel.workqueue.work_resubmit_to_queue" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_submit_isr" name="kernel.workqueue.work_submit_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_submit_thread" name="kernel.workqueue.work_submit_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_submit_to_multipleq" name="kernel.workqueue.work_submit_to_multipleq" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_submit_to_queue_isr" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.work_submit_to_queue_thread" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.workqueue.workq_start_before_submit" name="kernel.workqueue.workq_start_before_submit" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic" name="kernel.threads.dynamic" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.abort_handler" name="kernel.threads.abort_handler" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis" name="kernel.threads.apis" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.abort_handler" name="kernel.threads.apis.abort_handler" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.customdata_get_set_coop" name="kernel.threads.apis.customdata_get_set_coop" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.customdata_get_set_preempt" name="kernel.threads.apis.customdata_get_set_preempt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.delayed_thread_abort" name="kernel.threads.apis.delayed_thread_abort" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.essential_thread_operation" name="kernel.threads.apis.essential_thread_operation" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.k_thread_foreach" name="kernel.threads.apis.k_thread_foreach" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.systhreads_idle" name="kernel.threads.apis.systhreads_idle" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.systhreads_main" name="kernel.threads.apis.systhreads_main" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_join" name="kernel.threads.apis.thread_join" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_join_deadlock" name="kernel.threads.apis.thread_join_deadlock" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_join_isr" name="kernel.threads.apis.thread_join_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_name_get_set" name="kernel.threads.apis.thread_name_get_set" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_name_user_get_set" name="kernel.threads.apis.thread_name_user_get_set" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.thread_start" name="kernel.threads.apis.thread_start" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_abort_others" name="kernel.threads.apis.threads_abort_others" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_abort_repeat" name="kernel.threads.apis.threads_abort_repeat" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_abort_self" name="kernel.threads.apis.threads_abort_self" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_cpu_mask" name="kernel.threads.apis.threads_cpu_mask" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_priority_set" name="kernel.threads.apis.threads_priority_set" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_spawn_delay" name="kernel.threads.apis.threads_spawn_delay" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_spawn_forever" name="kernel.threads.apis.threads_spawn_forever" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_spawn_params" name="kernel.threads.apis.threads_spawn_params" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_spawn_priority" name="kernel.threads.apis.threads_spawn_priority" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_suspend" name="kernel.threads.apis.threads_suspend" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_suspend_resume_cooperative" name="kernel.threads.apis.threads_suspend_resume_cooperative" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_suspend_resume_preemptible" name="kernel.threads.apis.threads_suspend_resume_preemptible" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.threads_suspend_timeout" name="kernel.threads.apis.threads_suspend_timeout" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.apis.user_mode" name="kernel.threads.apis.user_mode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.customdata_get_set_coop" name="kernel.threads.customdata_get_set_coop" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.delayed_thread_abort" name="kernel.threads.delayed_thread_abort" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.dyn_thread_perms" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.kernel_create_dyn_user_thrConsole now belongs to simulator." name="kernel.threads.dynamic.kernel_create_dyn_user_thrConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.kernel_create_dyn_user_thread" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.thread_index_management" name="kernel.threads.dynamic.thread_index_management" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.user_create_dyn_user_thread" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.essential_thread_operation" name="kernel.threads.essential_thread_operation" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.init" name="kernel.threads.init" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.init.kdefine_coop_thread" name="kernel.threads.init.kdefine_coop_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.init.kdefine_preempt_thread" name="kernel.threads.init.kdefine_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.init.kinit_coop_thread" name="kernel.threads.init.kinit_coop_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.init.kinit_preempt_thread" name="kernel.threads.init.kinit_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.k_thread_foreach" name="kernel.threads.k_thread_foreach" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.kdefine_coop_thread" name="kernel.threads.kdefine_coop_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.kinit_coop_thread" name="kernel.threads.kinit_coop_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.systhreads_idle" name="kernel.threads.systhreads_idle" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.systhreads_main" name="kernel.threads.systhreads_main" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.thread_name_get_set" name="kernel.threads.thread_name_get_set" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.thread_start" name="kernel.threads.thread_start" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_abort_others" name="kernel.threads.threads_abort_others" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_abort_repeat" name="kernel.threads.threads_abort_repeat" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_abort_self" name="kernel.threads.threads_abort_self" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_cpu_mask" name="kernel.threads.threads_cpu_mask" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_priority_set" name="kernel.threads.threads_priority_set" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_spawn_delay" name="kernel.threads.threads_spawn_delay" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_spawn_forever" name="kernel.threads.threads_spawn_forever" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_spawn_params" name="kernel.threads.threads_spawn_params" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_spawn_priority" name="kernel.threads.threads_spawn_priority" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_suspend_resume_cooperative" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.threads.user_mode" name="kernel.threads.user_mode" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:kernel.sched" name="kernel.sched" time="0">
          </testcase>
  </testsuite><testsuite tests="15" errors="0" failures="0" name="" skipped="0" time="0">
          <testcase classname="mimxrt1050_evk:sample.net.zperf" name="sample.net.zperf" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.zperf.netusb_ecm" name="sample.net.zperf.netusb_ecm" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.zperf.netusb_eem" name="sample.net.zperf.netusb_eem" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.net.zperf.netusb_rndis" name="sample.net.zperf.netusb_rndis" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:usb.desc_sections" name="usb.desc_sections" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:usb.bos" name="usb.bos" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.cdc-acm" name="sample.usb.cdc-acm" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.cdc-acm.comp" name="sample.usb.cdc-acm.comp" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.cdc-acm-composite" name="sample.usb.cdc-acm-composite" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.hid" name="sample.usb.hid" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.hid_composite" name="sample.usb.hid_composite" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.hid-mouse" name="sample.usb.hid-mouse" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.loopback" name="sample.usb.loopback" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:sample.usb.webusb" name="sample.usb.webusb" time="0">
          </testcase>
          <testcase classname="mimxrt1050_evk:usb.device" name="usb.device" time="0">
          </testcase>
  </testsuite></testsuites>
